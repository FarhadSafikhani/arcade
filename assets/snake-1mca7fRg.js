var e=Object.defineProperty,t=(t,i,s)=>((t,i,s)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[i]=s)(t,"symbol"!=typeof i?i+"":i,s);import"./main-Dacpvxy9.js";import"./game-top-bar-D2G5Ym00.js";import{C as i,G as s,A as n}from"./HTMLText-CcoN7BBX.js";import{i as h}from"./device-detection-DiiT1QW1.js";class a{constructor(e,n,h){t(this,"container"),t(this,"segments",[]),t(this,"direction","right"),t(this,"nextDirection","right"),t(this,"gridSize"),t(this,"gridWidth"),t(this,"gridHeight"),t(this,"graphics"),this.gridSize=e,this.gridWidth=n,this.gridHeight=h,this.container=new i,this.graphics=new s,this.container.addChild(this.graphics),this.reset()}reset(){const e=Math.floor(this.gridWidth/2),t=Math.floor(this.gridHeight/2);this.segments=[{x:e,y:t},{x:e-1,y:t},{x:e-2,y:t}],this.direction="right",this.nextDirection="right",this.draw()}setDirection(e){"up"===this.direction&&"down"===e||"down"===this.direction&&"up"===e||"left"===this.direction&&"right"===e||"right"===this.direction&&"left"===e||(this.nextDirection=e)}move(){this.direction=this.nextDirection;const e=this.segments[0],t={x:e.x,y:e.y};switch(this.direction){case"up":t.y-=1;break;case"down":t.y+=1;break;case"left":t.x-=1;break;case"right":t.x+=1}return this.segments.unshift(t),this.segments.pop(),this.draw(),t}grow(){const e=this.segments[this.segments.length-1];this.segments.push({x:e.x,y:e.y})}checkCollision(e,t){return this.segments.some(i=>i.x===e&&i.y===t)}checkCollisionWithBody(e,t){return this.segments.slice(1).some(i=>i.x===e&&i.y===t)}draw(){this.graphics.clear(),this.segments.forEach((e,t)=>{const i=e.x*this.gridSize,s=e.y*this.gridSize;0===t?this.graphics.beginFill(3066993):this.graphics.beginFill(2600544),this.graphics.drawRoundedRect(i+1,s+1,this.gridSize-2,this.gridSize-2,3),this.graphics.endFill(),this.graphics.lineStyle(2,2267476,.8),this.graphics.drawRoundedRect(i+1,s+1,this.gridSize-2,this.gridSize-2,3),0===t&&this.drawEyes(i,s)})}drawEyes(e,t){let i,s,n,h;switch(this.direction){case"up":i=e+5,s=t+5,n=e+this.gridSize-5-3,h=t+5;break;case"down":i=e+5,s=t+this.gridSize-5-3,n=e+this.gridSize-5-3,h=t+this.gridSize-5-3;break;case"left":i=e+5,s=t+5,n=e+5,h=t+this.gridSize-5-3;break;case"right":i=e+this.gridSize-5-3,s=t+5,n=e+this.gridSize-5-3,h=t+this.gridSize-5-3}this.graphics.beginFill(0),this.graphics.drawCircle(i,s,3),this.graphics.drawCircle(n,h,3),this.graphics.endFill()}getHead(){return this.segments[0]}getLength(){return this.segments.length}}class r{constructor(e){t(this,"container"),t(this,"x",0),t(this,"y",0),t(this,"graphics"),t(this,"gridSize"),t(this,"animationTime",0),this.gridSize=e,this.container=new i,this.graphics=new s,this.container.addChild(this.graphics)}setPosition(e,t){this.x=e,this.y=t,this.draw()}draw(){this.graphics.clear();const e=this.x*this.gridSize+this.gridSize/2,t=this.y*this.gridSize+this.gridSize/2,i=this.gridSize/2-2;this.graphics.beginFill(15158332),this.graphics.drawCircle(e,t,i),this.graphics.endFill(),this.graphics.lineStyle(2,12597547,.8),this.graphics.drawCircle(e,t,i),this.graphics.beginFill(16777215),this.graphics.drawCircle(e-i/3,t-i/3,i/4),this.graphics.endFill(),this.graphics.beginFill(2899536),this.graphics.drawEllipse(e+i/2,t-i/2,i/6,i/3),this.graphics.endFill()}update(e){this.animationTime+=e;const t=1+.05*Math.sin(.1*this.animationTime);this.container.scale.set(t)}}const o={landscape:{width:600,height:400},portrait:{width:400,height:600}},d=40,c=h()?375:250,g=()=>{const e=window.innerWidth,t=window.innerHeight-120,i=e>t,s=i?o.landscape:o.portrait,n=s.width/d,h=s.height/d,a=e/s.width,r=t/s.height,c=Math.min(a,r);return{gameWidth:s.width,gameHeight:s.height,gridWidth:Math.floor(n),gridHeight:Math.floor(h),scale:c,isLandscape:i}};class l{constructor(e){t(this,"app"),t(this,"gameContainer"),t(this,"snake"),t(this,"food"),t(this,"score",0),t(this,"highScore",0),t(this,"gameSpeed",c),t(this,"lastMoveTime",0),t(this,"isGameOver",!1),t(this,"isPaused",!1),t(this,"isWaitingToStart",!0),t(this,"removeInputHandler"),t(this,"removeTouchHandler"),t(this,"removeTopBarHandler"),t(this,"gameDimensions"),this.app=e,this.gameContainer=new i,this.app.stage.addChild(this.gameContainer),this.gameDimensions=g(),this.highScore=parseInt(localStorage.getItem("snakeHighScore")||"0")}getGameDimensions(){return this.gameDimensions}async init(){this.createBackground(),this.snake=new a(d,this.gameDimensions.gridWidth,this.gameDimensions.gridHeight),this.gameContainer.addChild(this.snake.container),this.food=new r(d),this.gameContainer.addChild(this.food.container),this.spawnFood(),this.setupInput(),this.setupTouchControls(),this.setupTopBarEvents(),this.setupStartScreen(),this.updateUI()}createBackground(){const e=new s;e.beginFill(3426654),e.drawRect(0,0,this.gameDimensions.gameWidth,this.gameDimensions.gameHeight),e.endFill(),e.lineStyle(1,2899536,1);for(let t=0;t<=this.gameDimensions.gridWidth;t++)e.moveTo(t*d,0),e.lineTo(t*d,this.gameDimensions.gameHeight);for(let t=0;t<=this.gameDimensions.gridHeight;t++)e.moveTo(0,t*d),e.lineTo(this.gameDimensions.gameWidth,t*d);this.gameContainer.addChild(e)}setupTopBarEvents(){const e=e=>{"pause"===e.type?this.togglePause():"menu"===e.type&&this.returnToMainMenu()};document.addEventListener("pause",e),document.addEventListener("menu",e),this.removeTopBarHandler=()=>{document.removeEventListener("pause",e),document.removeEventListener("menu",e)}}setupInput(){const e=e=>{if(!this.isGameOver)switch(e.key){case"ArrowUp":case"w":case"W":e.preventDefault(),this.snake.setDirection("up");break;case"ArrowDown":case"s":case"S":e.preventDefault(),this.snake.setDirection("down");break;case"ArrowLeft":case"a":case"A":e.preventDefault(),this.snake.setDirection("left");break;case"ArrowRight":case"d":case"D":e.preventDefault(),this.snake.setDirection("right");break;case" ":case"Escape":e.preventDefault(),this.togglePause()}};document.addEventListener("keydown",e),this.removeInputHandler=()=>{document.removeEventListener("keydown",e)}}setupTouchControls(){let e=0,t=0,i=!1;const s=s=>{if(this.isGameOver)return;const n=s.touches[0];e=n.clientX,t=n.clientY,i=!0},n=e=>{i&&e.preventDefault()},h=s=>{if(!i)return;const n=s.changedTouches[0],h=n.clientX-e,a=n.clientY-t;Math.sqrt(h*h+a*a)>=30&&(Math.abs(h)>Math.abs(a)?h>0?this.snake.setDirection("right"):this.snake.setDirection("left"):a>0?this.snake.setDirection("down"):this.snake.setDirection("up")),i=!1};document.addEventListener("touchstart",s,{passive:!1}),document.addEventListener("touchmove",n,{passive:!1}),document.addEventListener("touchend",h,{passive:!1}),this.removeTouchHandler=()=>{document.removeEventListener("touchstart",s),document.removeEventListener("touchmove",n),document.removeEventListener("touchend",h)}}setupStartScreen(){const e=document.createElement("div");e.id="startScreen",e.style.cssText="\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            color: white;\n            text-align: center;\n            z-index: 30;\n            cursor: pointer;\n        ",e.innerHTML='\n            <h2 style="margin: 0 0 20px 0; font-size: 24px;">üêç Snake</h2>\n            <p style="margin: 0 0 30px 0; font-size: 16px; opacity: 0.8;">\n                Click or tap to start<br>\n                Use arrow keys or swipe to control\n            </p>\n            <div style="font-size: 14px; opacity: 0.6;">\n                Desktop: Arrow keys or WASD<br>\n                Mobile: Swipe to control\n            </div>\n        ';const t=document.getElementById("gameContainer");t&&t.appendChild(e);const i=()=>{this.isWaitingToStart=!1,this.lastMoveTime=Date.now(),e.style.display="none"};e.addEventListener("click",i),e.addEventListener("touchstart",i,{passive:!0})}update(e){if(this.isGameOver||this.isPaused||this.isWaitingToStart)return;const t=Date.now();t-this.lastMoveTime>this.gameSpeed&&(this.moveSnake(),this.lastMoveTime=t)}moveSnake(){const e=this.snake.move();e.x<0||e.x>=this.gameDimensions.gridWidth||e.y<0||e.y>=this.gameDimensions.gridHeight||this.snake.checkCollisionWithBody(e.x,e.y)?this.gameOver():e.x===this.food.x&&e.y===this.food.y&&(this.snake.grow(),this.spawnFood(),this.score+=1,this.updateUI(),this.score%50==0&&this.gameSpeed>50&&(this.gameSpeed-=10))}spawnFood(){let e,t;do{e=Math.floor(Math.random()*this.gameDimensions.gridWidth),t=Math.floor(Math.random()*this.gameDimensions.gridHeight)}while(this.snake.checkCollision(e,t));this.food.setPosition(e,t)}gameOver(){this.isGameOver=!0,this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("snakeHighScore",this.highScore.toString()),this.updateUI()),this.showGameOver()}showGameOver(){const e=document.getElementById("gameOver"),t=document.getElementById("finalScore");e&&t&&(t.textContent=this.score.toString(),e.style.display="block")}togglePause(){this.isPaused=!this.isPaused,this.isPaused?this.showPauseMenu():this.hidePauseMenu()}showPauseMenu(){const e=document.getElementById("pauseMenu");e&&(e.style.display="block")}hidePauseMenu(){const e=document.getElementById("pauseMenu");e&&(e.style.display="none")}updateUI(){const e=document.getElementById("score"),t=document.getElementById("highScore");e&&(e.textContent=this.score.toString()),t&&(t.textContent=this.highScore.toString())}restart(){this.score=0,this.gameSpeed=c,this.isGameOver=!1,this.isPaused=!1,this.isWaitingToStart=!0,this.lastMoveTime=0,this.snake.reset(),this.spawnFood(),this.updateUI();const e=document.getElementById("gameOver");e&&(e.style.display="none"),this.hidePauseMenu();const t=document.getElementById("startScreen");t&&(t.style.display="flex")}resume(){this.isPaused=!1,this.hidePauseMenu()}destroy(){this.removeInputHandler&&this.removeInputHandler(),this.removeTouchHandler&&this.removeTouchHandler(),this.removeTopBarHandler&&this.removeTopBarHandler(),this.gameContainer&&this.gameContainer.parent&&this.gameContainer.parent.removeChild(this.gameContainer)}returnToMainMenu(){window.location.href="/arcade/"}}let m=null,u=null;function p(){if(!u)return;const e=null==m?void 0:m.getGameDimensions();if(!e)return;const t=window.innerWidth,i=window.innerHeight-120,s=t/e.gameWidth,n=i/e.gameHeight,h=Math.min(s,n),a=u.view;a.style.width=e.gameWidth*h+"px",a.style.height=e.gameHeight*h+"px";const r=g();e.isLandscape,r.isLandscape}function w(e){m&&m.update(e)}window.restartGame=()=>{m&&m.restart()},window.returnToMainMenu=()=>{m&&m.returnToMainMenu()},window.resumeGame=()=>{m&&m.resume()},window.togglePause=()=>{m&&m.togglePause()},window.addEventListener("load",async function(){const e=g();u=new n({width:e.gameWidth,height:e.gameHeight,backgroundColor:2899536,antialias:!0,resolution:window.devicePixelRatio||1});const t=document.getElementById("gameContainer");if(t){const i=u.view;i.style.width=e.gameWidth*e.scale+"px",i.style.height=e.gameHeight*e.scale+"px",i.style.maxWidth="100%",i.style.maxHeight="100%",i.style.objectFit="contain",t.appendChild(i)}m=new l(u),await m.init(),u.ticker.add(w),window.addEventListener("resize",p)});
